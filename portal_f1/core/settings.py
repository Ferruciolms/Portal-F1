"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from datetime import timedelta

from decouple import config
from unipath import Path
import sys
import psycopg2.extensions
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'applications'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='j1a20bpwjt9p%!x5d8#w$!ip@_!m3-6vo)3nu1(&0!wb+bp$-1')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# load production server from .env
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'django', config('SERVER', default='127.0.0.1')]
# ALLOWED_HOSTS = ['localhost', '3.142.91.45', config('SERVER', default='127.0.0.1')]
ALLOWED_HOSTS = [config('SERVER', default='127.0.0.1'), config('SERVER_2', default='localhost'),
                 config('SERVER_3', default='localhost')]

# Application definition

INSTALLED_APPS = ['django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes',
                  'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles',
                  # aplications auxiliares
                  'django_cleanup.apps.CleanupConfig', 'rest_framework', 'django_filters', 'localflavor',
                  'rest_framework_simplejwt',
                  'drf_yasg', 'imagekit',

                  # aplications adicionados
                  'core_pages.apps.CorePagesConfig', 'core_access.apps.CoreAccessConfig',
                  'core_registration.apps.CoreRegistrationConfig', 'captcha', 'core_log.apps.CoreLogConfig',
                  'analytics.apps.AnalyticsConfig', 'blog.apps.BlogConfig',

                  ]

MIDDLEWARE = ['django.middleware.security.SecurityMiddleware', 'whitenoise.middleware.WhiteNoiseMiddleware',
              'django.contrib.sessions.middleware.SessionMiddleware',
              'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware',
              'django.contrib.auth.middleware.AuthenticationMiddleware',
              'django.contrib.messages.middleware.MessageMiddleware',
              'django.middleware.clickjacking.XFrameOptionsMiddleware', ]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [os.path.join(BASE_DIR, 'templates')],
     'APP_DIRS': True, 'OPTIONS': {
        'context_processors': ['django.template.context_processors.debug', 'django.template.context_processors.request',
                               'django.contrib.auth.context_processors.auth',
                               'django.contrib.messages.context_processors.messages', ],
        'libraries': {'pagination_tag': 'core_pages.templatetags.pagination_tag', }}, }, ]

WSGI_APPLICATION = 'core.wsgi.application'

DATABASES = {'default': {'ENGINE': 'django.db.backends.postgresql_psycopg2', 'NAME': config('NAME_DB'),
                         'USER': config('USER_DB'), 'PASSWORD': config('PASSWORD_DB'),
                         'HOST': config('HOST_DB'), 'PORT': config('PORT_DB'),
                         'OPTIONS': {'isolation_level': psycopg2.extensions.ISOLATION_LEVEL_SERIALIZABLE,
                                     'options': '-c search_path=' + config('SCHEMA_DB')}}}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
                            {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
                            {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
                            {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


STATIC_ROOT = 'staticfiles'
STATIC_URL = '/static/analytics/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]

# Arquivos de Upload
MEDIA_ROOT = os.path.join(STATIC_ROOT, 'uploads/')
MEDIA_URL = '/static/uploads/'

# Configuração de autenticação
LOGIN_REDIRECT_URL = 'solar'  # Route defined in app/urls.py
LOGOUT_REDIRECT_URL = '/'  # Route defined in app/urls.py
LOGIN_URL = 'login'

THOUSAND_SEPARATOR = '.',
USE_THOUSAND_SEPARATOR = True

# User Model
AUTH_USER_MODEL = 'core_access.User'

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Tempo de sessão
SESSION_COOKIE_AGE = 3600
SESSION_SAVE_EVERY_REQUEST = True

MESSAGE_TAGS = {messages.DEBUG: 'alert-secondary', messages.INFO: 'alert-info', messages.SUCCESS: 'alert-success',
                messages.WARNING: 'alert-warning',
                messages.ERROR: 'alert-danger', }

# Google reCAPTCHA
RECAPTCHA_PUBLIC_KEY = config('GOOGLE_RECAPTCHA_V2_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = config('GOOGLE_RECAPTCHA_V2_PRIVATE_KEY')
# SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

# Endereçamento de e-mail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''

# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.IsAdminUser', ],
#     'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework.authentication.SessionAuthentication',
#                                        'rest_framework_simplejwt.authentication.JWTAuthentication', ],
#     'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'}
#
# SIMPLE_JWT = {'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
#               'REFRESH_TOKEN_LIFETIME': timedelta(days=30), }

# SWAGGER_SETTINGS = {'exclude_url_names': ['insert-photo', ], }

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['https://' + config('SERVER'), 'https://' + config('SERVER_2')]

URL_APPLICATION_FOR_RESET_PW = 'http://localhost:8000'
